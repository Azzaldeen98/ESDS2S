// Generated by view binder compiler. Do not edit!
package com.example.esds2s.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.esds2s.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AlertNotify1Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button BtnResendEmail;

  @NonNull
  public final TextView alertBtnCancel;

  @NonNull
  public final TextView alertBtnOk;

  @NonNull
  public final TextView alertMessage;

  @NonNull
  public final LinearLayout alertNotify;

  @NonNull
  public final TextView alertTitle;

  @NonNull
  public final ImageView topIcon;

  private AlertNotify1Binding(@NonNull LinearLayout rootView, @NonNull Button BtnResendEmail,
      @NonNull TextView alertBtnCancel, @NonNull TextView alertBtnOk,
      @NonNull TextView alertMessage, @NonNull LinearLayout alertNotify,
      @NonNull TextView alertTitle, @NonNull ImageView topIcon) {
    this.rootView = rootView;
    this.BtnResendEmail = BtnResendEmail;
    this.alertBtnCancel = alertBtnCancel;
    this.alertBtnOk = alertBtnOk;
    this.alertMessage = alertMessage;
    this.alertNotify = alertNotify;
    this.alertTitle = alertTitle;
    this.topIcon = topIcon;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AlertNotify1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AlertNotify1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.alert_notify1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AlertNotify1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BtnResendEmail;
      Button BtnResendEmail = ViewBindings.findChildViewById(rootView, id);
      if (BtnResendEmail == null) {
        break missingId;
      }

      id = R.id.alert_btn_cancel;
      TextView alertBtnCancel = ViewBindings.findChildViewById(rootView, id);
      if (alertBtnCancel == null) {
        break missingId;
      }

      id = R.id.alert_btn_ok;
      TextView alertBtnOk = ViewBindings.findChildViewById(rootView, id);
      if (alertBtnOk == null) {
        break missingId;
      }

      id = R.id.alert_message;
      TextView alertMessage = ViewBindings.findChildViewById(rootView, id);
      if (alertMessage == null) {
        break missingId;
      }

      LinearLayout alertNotify = (LinearLayout) rootView;

      id = R.id.alert_title;
      TextView alertTitle = ViewBindings.findChildViewById(rootView, id);
      if (alertTitle == null) {
        break missingId;
      }

      id = R.id.top_icon;
      ImageView topIcon = ViewBindings.findChildViewById(rootView, id);
      if (topIcon == null) {
        break missingId;
      }

      return new AlertNotify1Binding((LinearLayout) rootView, BtnResendEmail, alertBtnCancel,
          alertBtnOk, alertMessage, alertNotify, alertTitle, topIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
